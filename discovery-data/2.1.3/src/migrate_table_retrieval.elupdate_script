#!/bin/bash
#
# This script migrates the table retrieval indexes from the format used in WD 2.1.[0-2] to the 
# format used in WD 2.1.3
#
# Usage: migrate_table_retrieval.sh URL_for_elastic
#        e.g., ./migrate_table_retrieval.elupdate_script
#
# Uses curl, jq, grep, sed, cut, mktmp and elasticsearch's API

ES_URL_N_PORT="http://localhost:${ES_PORT:-9100}"

# Find the name of all _table indexes
table_indexes=`curl -s -X GET "${ES_URL_N_PORT}/_cat/indices" | grep _tables | sed -e "s/ [ ]*/,/g" | cut -f3 -d','`

# For each _table index, do:
for table_index_name in $table_indexes
do
  echo "Migrating $table_index_name"

  # Step 1. Copy current table index's settings and trim some properties that will prevent us 
  #         from putting that settings in creating a new index.
  SETTINGS_FILE=$(mktemp) || { echo "Failed to create temp SETTINGS_FILE."; exit 1; }
  echo '{"settings":{"index":' > ${SETTINGS_FILE}
  curl -s -X GET "${ES_URL_N_PORT}/${table_index_name}/_settings" | jq ".\"${table_index_name}\".settings.index | { languagecode: .languagecode, mapping: .mapping, number_of_shards: .number_of_shards, analysis: .analysis, number_of_replicas: .number_of_replicas }" >> ${SETTINGS_FILE} \
  	|| { echo "Could not get settings for ${table_index_name}."; exit 1; }
  echo '},' >> ${SETTINGS_FILE}

  analyzer_name=`curl -s -X GET "${ES_URL_N_PORT}/${table_index_name}/_mappings" | jq ".\"${table_index_name}\".mappings.tables.properties.caption.analyzer"`


  # Step 2. Copy new table index's mappings from our plugin template
  # https://github.ibm.com/CPD/ama-discovery-elastic/blob/master/collection/src/main/resources/mapping.properties#L313-L344
  # to the second curl command of Step 4.
  echo "\"mappings\":{
  	\"tables\": {
      \"properties\": {
        \"source_document_id\": {
          \"type\": \"keyword\"
        },
        \"source_document_internal_id\": {
          \"type\": \"keyword\"
        },
        \"collection_id\": {
          \"type\": \"keyword\"
        },
        \"table_html\": {
          \"type\": \"binary\"
        },
        \"table_html_offset\": {
          \"type\": \"integer\"
        },
        \"table\": {
          \"type\": \"object\"
        },
        \"table_enrichment_field\": {
          \"type\": \"keyword\"
        },
        \"all\": {
          \"type\": \"text\",
          \"term_vector\": \"with_positions_offsets\",
          \"analyzer\": ${analyzer_name}
        }
      }}}
  }" >> ${SETTINGS_FILE}

  #echo "===== SETTINGS_FILE ${SETTINGS_FILE} ====="
  #cat ${SETTINGS_FILE} | jq
  
  # Step 3. Delete table index.
  curl -s -X DELETE "${ES_URL_N_PORT}/${table_index_name}" \
      || { echo "Could not delete index ${table_index_name}"; exit 1; }

  # Step 4. Create a new table index with the same name and using settings/mappings 
  #    prepared in Step 1.
  curl -s -X PUT "${ES_URL_N_PORT}/${table_index_name}?pretty" -H 'Content-Type: application/json' -d @${SETTINGS_FILE} \
      || { echo "Could not create new empty index for ${table_index_name}"; exit 1; }
 
  rm -f ${SETTINGS_FILE}

done
