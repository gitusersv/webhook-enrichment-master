apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: wire-postgresql-restore
    app.kubernetes.io/instance: @release@
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: discovery
    helm.sh/chart: ibm-watson-discovery-@release@-prod
    release: @release@
    service: discovery
  name: @release@-discovery-wire-postgres-restore
  namespace: @namespace@
spec:
  backoffLimit: 6
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: wire-postgres-restore
        app.kubernetes.io/instance: @release@
        app.kubernetes.io/managed-by: Tiller
        app.kubernetes.io/name: discovery
        helm.sh/chart: ibm-watson-discovery-@release@-prod
        service: discovery
        job-name: @release@-discovery-wire-postgres-restore
        release: @release@
    spec:
      serviceAccount: @service-account@
      serviceAccountName: @service-account@
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
              weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      containers:
        - image: @image@
          imagePullPolicy: IfNotPresent
          name: postgres-config
          env:
            - name: PG_HOST
              value: @pg-host@
            - name: PG_PORT
              value: "@pg-port@"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: @pg-secret@
                  key: pg_su_password
            - name: PG_USR
              value: dadmin
            - name: TRAININGCRUD_AUTH
              valueFrom:
                secretKeyRef:
                  name: @pg-secret@
                  key: pg_su_password
            - name: PG_AUTH
              valueFrom:
                secretKeyRef:
                  name: @pg-secret@
                  key: pg_su_password
            - name: PGDATABASE
              value: postgres
            - name: PGSSLMODE
              value: "require"
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 30